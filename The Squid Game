METHOD 1 
/*
#include <iostream>
#include <array>
using namespace std;

void Insertion_Sort(int vec[], int n){
	int i, x, j;
	for (i = 1; i < n; i++){
		x = vec[i];
		j = i - 1;
		while (j >= 0 && vec[j] > x){
			vec[j + 1] = vec[j];
			j = j - 1;
		}
		vec[j + 1] = x;
	}
	std::cout << vec[n-1] << std::endl;
}


int main() {
	int t;
	std::cin >> t;
	while(t!=0){
	   int n;
	   int c=0;
	   int sum=0;
	   std::cin >> n;
	   int a[n];
	   for (int i = 0; i < n; i++) {
	       std::cin >> a[i];
	   }
	   int b[n];
	   for (int  j= 0; j < n; j++) {
	       for (int i = 0; i < n; i++) {
	           if(i==c){
	               sum+=0;
	           }else{sum+=a[i];}
            	      
	       }
	       c++;
	       b[j]=sum;
	       sum=0;
	   }
	   
	   Insertion_Sort(b, n);

	    
	   
	
	   t--;
	}
	return 0;
}
*/

METHOD 2
/*
	 #include <iostream>
#include<algorithm>
using namespace std;

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
	    int n,sum=0;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    {
	        cin>>arr[i];
	    }
	    sort(arr,arr+n);
	    for(int i=1;i<n;i++)
	    {
	        sum=sum+arr[i];
	    }
	    cout<<sum<<endl;
	}
	return 0;
}
*/
